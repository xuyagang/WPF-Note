<Window x:Class="WPF_Style.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Style"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!--方式二：通过Resources属性值集合
    在当前窗口的资源里面声明样式,对于每个窗口控件以及application都有resources属性
    样式默认作用与全局，可以给样式起名，避免全部覆盖
    (加入属性x:key=""，在要使用的部位 style="{StaticResource ButtonStyle}")
    -->
    <!--Baseon属性，类似继承关系-->
    
    <Window.Resources>
        <!--父级样式-->
        <Style x:Key="BaseButtonStyle" TargetType="Button">
            <!--通常用于设置公共属性-->
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Brown"/>
        </Style>
        
        <!--继承父级样式-->
        <!--TargetType必须要对应-->
        <Style x:Key="MyButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <!--<Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Red"/>-->
            
            <Setter Property="Content" Value="Button1"/>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel>
            <!--元素对象是属性集永远是最高的-->
            <Button  Content="Hello1" Style="{StaticResource MyButtonStyle}"/>
            <Button Style="{StaticResource MyButtonStyle}"/>
            <Button Content="Test"/>

            
            <!--方式一：直接赋予style--><!--
            <Button Content="Button1" FontSize="20" Foreground="White" Background="Red"/>
            <Button Content="Button1" FontSize="20" Foreground="White" Background="Red"/>
            <Button Content="Button1" FontSize="20" Foreground="White" Background="Red"/>-->
        </StackPanel>
    </Grid>
</Window>
